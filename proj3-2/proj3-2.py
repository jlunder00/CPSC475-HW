'''
Class: CPSC 475
Teem Member 1: Jason Lunder
Submitted By: Jason Lunder
GU Username: jlunder
File Name: proj3-2.py
Program takes a corpus and generates random sentences based on probabilistic weights determined by ngrams
To Execute: python3 proj3-2.py <filename>
'''


import nlpUtils as nlp
import numpy as np
import sys
from random import random

'''
Pre: input file exists
Post: list of tokenized data
'''

def getData(fname):
    data = nlp.tokenize(nlp.get_data(fname))
    return data
    

'''
Pre: list of sentences and desired gram size
Post: dictionary of words and their weights 
'''

def getWeights(data, nGramSize):
    grams = nlp.make_grams(data, nGramSize)
    dictionary = nlp.getFreq(grams)
    total = sum(list(dictionary.values()))
    for word in dictionary:
        dictionary[word] = float(dictionary[word]/total)
    words = list(dictionary.keys())
    weights = np.array(list(dictionary.values()), dtype= np.float64).cumsum()
    for x in range(len(words)):
        dictionary[words[x]] = weights[x]
    return dictionary


'''
Pre: Dictionary of words and weights
Post: randomly selected ngrams
'''
def genOne(dictionary):
    words = list(dictionary.keys())
    weights = list(dictionary.values())
    choice = random()
    for x in range(len(words)):
        if weights[x] > choice:
            return words[x]


'''
Pre: Dictionary of words and weights
Post: Sentence generated by randomly selected ngrams and opened and closed with <s> and </s>
'''
def genSentence(dictionary):
    fin = []
    init = genOne(dictionary).split()
    while'<s>' not in init:
        init = genOne(dictionary).split()
    fin += init
    
    while len(fin)< 12-len(init):
        mid = genOne(dictionary).split()
        while '<s>' in mid or '</s>' in mid:
            mid = genOne(dictionary).split()
        fin += mid
          
    end = genOne(dictionary).split()
    while '</s>' not in end:
        end = genOne(dictionary).split()
    fin += end
    
    return ' '.join(fin)


def display(weights):
    print(genSentence(weights))

def main():
    data = getData(sys.argv[1])
    for i in range(1,5):
        weights = getWeights(data, i)
        print('n = %d grams'%(i))
        for j in range(5):
            display(weights);

main()
